@model OnlineAdmission.APP.ViewModels.Student.AllStudentVM

@{
    ViewData["Title"] = "Home Page";
    var paymentCompletedStudent = Model.MeritStudents.Where(m => m.PaymentStatus == true).ToList();

}
@{ 

    List<string> paidSubList = new List<string>();
    if (Model.Students != null)
    {
        foreach (var student in paymentCompletedStudent)
        {
            foreach (var subject in Model.Subjects)
            {
                if (student.SubjectCode == subject.Code)
                {
                    paidSubList.Add(subject.SubjectName);
                }
            }
        }
    }
    var paidSubGroup = paidSubList.GroupBy(i => i);


    List<string> meritSubList = new List<string>();
    if (Model.Students != null)
    {
        foreach (var student in Model.MeritStudents)
        {
            foreach (var subject in Model.Subjects)
            {
                if (student.SubjectCode == subject.Code)
                {
                    meritSubList.Add(subject.SubjectName);
                }
            }
        }
    }
    var meritSubGroup = meritSubList.GroupBy(i => i);


    List<string> admitttedSubList = new List<string>();
    if (Model.Students!=null)
    {
        foreach (var student in Model.Students)
        {
            foreach (var subject in Model.Subjects)
            {
                if (student.SubjectId == subject.Id)
                {
                    admitttedSubList.Add(subject.SubjectName);
                }
            }
        }
    }
    var AdmittedSubGroup = admitttedSubList.GroupBy(i => i);
}

<div class="text-center">
    
</div>


<div class="card-deck">
    <div class="card">
        <div class="card-header bg-info border-info text-center">
            <h4>Applied</h4>
        </div>
        <div class="">
            
            <a asp-controller="AppliedStudents" asp-action="index">
                <h5 class="card-title">Total <span class="text-info font-weight-bold">@Model.AppliedStudents.Count</span>  Students</h5>
            </a>
            
            <p class="card-text">
                
            </p>
        </div>
        @*<div class="card-footer">
            <small class="text-muted"></small>
        </div>*@
    </div>

    <div class="card">
        <div class="card-header bg-primary border-primary text-center">
            <h4>Selected</h4>
        </div>
        <div class="">
            <h5 class="card-title">Total <span class="text-info font-weight-bold">@Model.MeritStudents.Count</span>  Students</h5>

            <table class="table table-bordered table-striped">
                <thead class="bg-primary">
                    <tr>
                        <td>Subjects</td>
                        <td>Students</td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var sub in meritSubGroup.OrderBy(m => m.Key))
                    {
                        <tr>
                            <td>@sub.Key</td>
                            <td>@sub.Count()</td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>
        @*<div class="card-footer">
            <small class="text-muted"></small>
        </div>*@
    </div>

    <div class="card">
        <div class="card-header bg-success border-success text-center">
            <h4>Paid</h4>
        </div>
        <div class="">
            
            @if (Model.MeritStudents!=null)
            {
                <h5 class="card-title">Total <span class="text-info font-weight-bold">@paymentCompletedStudent.Count</span>  Students </h5>
                <h4></h4>

                <table class="table table-bordered table-striped">
                    <thead class="bg-success">
                        <tr>
                            <td>Subjects</td>
                            <td>Students</td>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var sub in paidSubGroup.OrderBy(m => m.Key))
                        {
                            <tr>
                                <td>@sub.Key</td>
                                <td>@sub.Count()</td>
                            </tr>
                        }
                    </tbody>
                </table>

            }
            else
            {
                <h4>Merit Student List is Empty</h4>
            }
        </div>
        @*<div class="card-footer">
            
        </div>*@
    </div>

    <div class="card">
        <div class="card-header bg-warning border-warning text-center">
            <h4>Admitted</h4>
        </div>
        <div class="">
            <a asp-controller="Students" asp-action="index">
                <h5 class="card-title">Total <span class="text-info font-weight-bold">@Model.Students.Count</span>  Students</h5>
            </a>
            
                <table class="table table-bordered table-striped">
                    <thead class="bg-warning">
                        <tr>
                            <td>Subjects</td>
                            <td>Students</td>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var sub in AdmittedSubGroup.OrderBy(m => m.Key))
                        {
                            <tr>
                                <td>@sub.Key</td>
                                <td>@sub.Count()</td>
                            </tr>
                         }
                        </tbody>
                </table>
           
            <p class="card-text">

            </p>
        </div>
        @*<div class="card-footer">
            <small class="text-muted">Last updated 3 mins ago</small>
        </div>*@
    </div>
</div>